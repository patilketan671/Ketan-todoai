@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --neon-green: #00ff9d;
  --neon-yellow: #ffcc00;
}

body {
  background: #1a1a1a;
  color: #fff;
  min-height: 100vh;
  position: relative;
  overflow: hidden;
}

.flow-background {
  position: fixed;
  top: 60px;
  left: 35%;
  transform: translateX(-50%);
  width: 600px;
  height: 120px;
  pointer-events: none;
  z-index: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.flow-node {
  position: absolute;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform, opacity;
  opacity: 0;
  transform-origin: center;
}

.flow-node.active {
  opacity: 1;
  animation: nodeAppear 0.3s ease-out;
}

.flow-node.node {
  width: 50px;
  height: 50px;
  background: rgba(26, 26, 26, 0.95);
  border: 2px solid currentColor;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 0 20px currentColor, inset 0 0 10px currentColor;
  position: relative;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(5px);
}

.flow-node.node .node-icon {
  font-size: 20px;
  line-height: 1;
  filter: drop-shadow(0 0 15px currentColor);
  transition: all 0.3s ease;
  transform: scale(1);
}

.flow-node.node:hover .node-icon {
  filter: drop-shadow(0 0 20px currentColor);
  transform: scale(1.1);
}

.flow-node.small-node {
  width: 4px;
  height: 4px;
  background: currentColor;
  border-radius: 50%;
  box-shadow: 0 0 15px currentColor;
  opacity: 0.9;
}

.flow-node.connection {
  height: 2px;
  background: linear-gradient(90deg, currentColor 70%, transparent);
  box-shadow: 0 0 20px currentColor;
  opacity: 0;
  transform-origin: left center;
  position: relative;
}

.flow-node.connection.active {
  opacity: 0.8;
  animation: connectionAppear 1s ease-out;
}

.flow-node.connection::after {
  content: '';
  position: absolute;
  right: 2px;
  top: 50%;
  width: 10px;
  height: 10px;
  border-top: 2px solid currentColor;
  border-right: 2px solid currentColor;
  transform: translateY(-50%) rotate(45deg);
  box-shadow: 2px -2px 6px currentColor;
}

.flow-node.connection[style*="rotate"] {
  opacity: 0.8;
  height: 2px;
}

.flow-node.connection[style*="rotate"]::after {
  transform: translateY(-50%) rotate(var(--rotation));
}

.flow-node.green {
  color: var(--neon-green);
}

.flow-node.yellow {
  color: var(--neon-yellow);
}

.node-label {
  position: absolute;
  bottom: -25px;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  font-size: 14px;
  color: currentColor;
  text-shadow: 0 0 10px currentColor;
  opacity: 0;
  transition: all 0.3s ease;
}

.flow-node.active .node-label {
  opacity: 1;
  animation: labelAppear 0.3s ease-out forwards;
}

.node-sublabel {
  position: absolute;
  top: -24px;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  font-size: 10px;
  color: currentColor;
  opacity: 0.8;
  text-shadow: 0 0 8px currentColor;
}

.todo-app {
  max-width: 500px;
  margin: 180px auto 20px;
  padding: 20px;
  border: 1px solid var(--neon-green);
  border-radius: 8px;
  background: rgba(26, 26, 26, 0.8);
  position: relative;
  z-index: 1;
  backdrop-filter: blur(10px);
}

.todo-list {
  display: flex;
  flex-direction: column;
  position: relative;
}

.todo-item {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px;
  border: 1px solid var(--neon-green);
  border-radius: 4px;
  margin-bottom: 8px;
  position: relative;
  background: rgba(26, 26, 26, 0.9);
  transition: all 0.3s ease;
  animation: addTodo 0.3s ease-out;
}

.todo-item.removing {
  animation: removeTodo 0.3s ease-out forwards;
}

.todo-item::before,
.todo-item::after {
  content: '';
  position: absolute;
  background: var(--neon-green);
  opacity: 0;
  transition: all 0.3s ease;
}

.todo-item:hover::before,
.todo-item:hover::after {
  opacity: 0.3;
}

.todo-item::before {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  left: -20px;
  top: 50%;
  transform: translateY(-50%);
}

.todo-item::after {
  height: 2px;
  width: 15px;
  left: -8px;
  top: 50%;
  transform: translateY(-50%);
}

.todo-item input[type="checkbox"] {
  width: 18px;
  height: 18px;
  margin-right: 8px;
  accent-color: var(--neon-green);
  position: relative;
  z-index: 1;
  cursor: pointer;
  appearance: none;
  border: 2px solid var(--neon-green);
  border-radius: 3px;
  background: transparent;
  transition: all 0.2s ease;
}

.todo-item input[type="checkbox"]:checked {
  background: var(--neon-green);
  position: relative;
}

.todo-item input[type="checkbox"]:checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #1a1a1a;
  font-size: 12px;
  font-weight: bold;
}

.todo-item input[type="checkbox"]:hover {
  box-shadow: 0 0 8px var(--neon-green);
}

.todo-item .done {
  text-decoration: line-through;
  color: var(--neon-green);
  opacity: 0.7;
}

.add-todo {
  margin-top: 20px;
  display: flex;
  gap: 12px;
  border: 1px solid var(--neon-green);
  border-radius: 4px;
  padding: 8px;
  position: relative;
  background: rgba(26, 26, 26, 0.9);
}

.add-todo::before,
.add-todo::after {
  content: '';
  position: absolute;
  background: var(--neon-green);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.add-todo:focus-within::before,
.add-todo:focus-within::after {
  opacity: 0.3;
}

.add-todo::before {
  width: 2px;
  height: 20px;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
}

.add-todo::after {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  top: -26px;
  left: 50%;
  transform: translateX(-50%);
}

.add-todo input {
  flex: 1;
  padding: 8px 12px;
  background: transparent;
  border: none;
  color: #fff;
  font-size: 14px;
}

.add-todo input::placeholder {
  color: #666;
}

.add-todo button {
  padding: 8px 16px;
  background: var(--neon-yellow);
  color: #000;
  border: none;
  border-radius: 4px;
  font-size: 14px;
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.add-todo button::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: width 0.3s ease, height 0.3s ease;
}

.add-todo button:hover::before {
  width: 200%;
  height: 200%;
}

/* Animations */
@keyframes addTodo {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes removeTodo {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(20px);
  }
}

/* Header styles */
header {
  background: rgba(26, 26, 26, 0.8);
  backdrop-filter: blur(10px);
  border-bottom: 1px solid rgba(0, 255, 157, 0.1);
}

header a {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.2s ease;
}

header a:hover {
  transform: scale(1.1);
}

header svg {
  filter: drop-shadow(0 0 8px var(--neon-green));
}

/* Footer styles */
footer {
  background: rgba(26, 26, 26, 0.8);
  backdrop-filter: blur(10px);
  border-top: 1px solid rgba(0, 255, 157, 0.1);
}

footer a {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.2s ease;
}

footer a:hover {
  transform: scale(1.1);
}

footer svg {
  filter: drop-shadow(0 0 8px var(--neon-green));
}

@keyframes nodeAppear {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.1);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
}

@keyframes connectionAppear {
  0% {
    opacity: 0;
    transform: scaleX(0);
  }
  100% {
    opacity: 0.8;
    transform: scaleX(1);
  }
}

@keyframes labelAppear {
  0% {
    opacity: 0;
    transform: translateX(-50%) translateY(5px);
  }
  100% {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

@keyframes pulseDot {
  0% {
    transform: translateY(-50%) scale(1);
    opacity: 1;
  }
  50% {
    transform: translateY(-50%) scale(1.5);
    opacity: 0.5;
  }
  100% {
    transform: translateY(-50%) scale(1);
    opacity: 1;
  }
}
